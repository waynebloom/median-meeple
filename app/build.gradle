plugins {
    alias libs.plugins.android.application
    alias libs.plugins.compose.compiler
    alias libs.plugins.dagger.hilt
    alias libs.plugins.detekt
    alias libs.plugins.kotlin
    alias libs.plugins.kotlin.serialization
    alias libs.plugins.ksp
    alias libs.plugins.room
}

detekt {
    config.setFrom("$projectDir/detekt-config.yml")
}

android {
    compileSdk 35

    defaultConfig {
        applicationId "com.waynebloom.scorekeeper"
        minSdk 26
        targetSdk 35
        versionCode 15
        versionName "2024.1.2"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        room {
            schemaDirectory "$projectDir/schemas"
        }
        ksp {
            // incremental annotation processing speeds up builds
            arg("room.incremental", "true")
        }

        File secretsFile = project.rootProject.file("secrets.properties")
        Properties properties = new Properties()
        properties.load(secretsFile.newInputStream())

        buildConfigField("String", "SUPABASE_URL", properties.getProperty("SUPABASE_URL"))
        buildConfigField("String", "SUPABASE_KEY", properties.getProperty("SUPABASE_ANON_KEY"))
    }

    sourceSets {
        // add exported schema location as test app assets.
        androidTest.assets.srcDirs += files("$projectDir/schemas".toString())
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            ndk.debugSymbolLevel = 'FULL'
        }
        debug {
            applicationIdSuffix ".debug"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
        viewBinding true
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    namespace 'com.waynebloom.scorekeeper'
}

dependencies {

    implementation libs.activity.compose
    implementation libs.compose.foundation
    implementation libs.compose.material3
    implementation libs.compose.ui
    implementation libs.compose.ui.tooling.preview
    implementation libs.compose.ui.viewbinding
    implementation libs.constraintlayout
    implementation libs.datastore.preferences
    implementation libs.dagger.hilt
    implementation libs.hilt.navigation.compose
    implementation libs.hilt.work
    implementation libs.junit.ktx
    implementation libs.ksp.symbol.processing.api
    implementation libs.ktor.client.android
    implementation libs.lifecycle.runtime.compose
    implementation libs.lifecycle.runtime.ktx
    implementation libs.lifecycle.viewmodel.compose
    implementation libs.lifecycle.viewmodel.ktx
    implementation libs.material
    implementation libs.moshi
    implementation libs.moshi.kotlin
    implementation libs.navigation.compose
    implementation libs.play.services.ads
    implementation libs.retrofit
    implementation libs.retrofit.converter.moshi
    implementation libs.room.runtime
    implementation libs.room.ktx
    implementation libs.supabase.postgrest
    implementation libs.work.runtime.ktx
    androidTestImplementation libs.room.testing
    androidTestImplementation libs.runner
    debugImplementation libs.compose.ui.tooling
    debugImplementation libs.compose.ui.test.manifest
    ksp libs.dagger.hilt.compiler
    ksp libs.hilt.compiler
    ksp libs.room.compiler
}